//zboxscript/enemies/bossmelon.zsc

CLASS BossMelon : BoxMonster
{
	Default
	{
		Health 3000;
		Speed 10;
		Radius 96;
		Height 104;
		Mass 20000;
		DamageFunction (random(6, 10));
		PainChance 6;
		PainChance "Melee", 64;
		PainChance "Lightning", 32;
		PainChance "PartyShot", 12;
		PainChance "Prism", 256;
		DamageFactor "Melon", 0.0;
		DamageFactor "Melee", 2.0;
		DamageFactor "PartyShot", 1.25;
		BloodType "BigFruitBlood";
		Species "Melon";
		Tag "* SUPER TURBO FRUIT PUNCHER *";
		Obituary "$BOX_DIE_BIGMELON";
		MinMissileChance 1;
		MeleeThreshold 0;
		MeleeRange 128;
		+BOSS;
		+NOINFIGHTING;
		//$Category "Box Party/Enemies/"
		//$Title "Melon (BOSS)"
		//$Color 4
	}
	
	bool isAngery;
	bool flashyTime;
	int startingHealth;
	int Exhaustion;
	int ExhaustMeter;
	
	action void A_BoxExhaust (int Amount)
	{
		if (invoker)
		{
			if (Amount == 0) {invoker.Exhaustion = 0;} //reset exhaust if amount is 0
			else
			{
				invoker.Exhaustion += Amount; //add exhaustion
				if (invoker.Exhaustion >= 100 + invoker.ExhaustMeter) //melon = exhausted
				{
					invoker.ExhaustMeter += 25; //harder to get exhausted now
					SetStateLabel("Exhausted"); //switch to exhaust state
				}
			}
		}
	}

	override void Tick(void)
	{
		Super.Tick();
		
		if (self)
		{
			if (startingHealth == 0) {startingHealth = self.Health;}
		
			if (isAngery == false) 
			{
				//currentBullet = "BigFruitBullet";
				A_RemoveLight("flashyred");
			}
			else 
			{
				//currentBullet = "BigFruitBullet2";
				if (random(0, 15) == 15) {A_SpawnItemEX("PlateSpawnerSpark", frandom(-32, 32), frandom(-32, 32), frandom(0, 64), frandom(-12, 12), frandom(-12, 12), frandom(0, 8), 0, SXF_NOCHECKPOSITION);}
			}
			
			if ((isAngery == true) && (flashyTime == false))
			{
				for (int countey = 1; countey < 16; countey++)
				{
					A_SpawnItemEX("PlateSpawnerSpark", frandom(-32, 32), frandom(-32, 32), frandom(0, 64), frandom(-12, 12), frandom(-12, 12), frandom(0, 8), 0, SXF_NOCHECKPOSITION);
				}
				A_AttachLightDef("flashyred", "GLOWREDGIANT");
				flashyTime = true;
				A_QuakeEX(4, 4, 4, 35, 0, 1280, 0);
				//bBRIGHT = true;
			}
			
			if ((self.Health <= (startingHealth / 2)) && (self.Health > 0)) {isAngery = true;}
			else {isAngery = false;}
		}
	}
	
	States
	{
		Spawn:
			BMEL A 10 A_Look;
			Loop;
		JustOneSec:
			#### # 0 A_ResetScale();
			BMEL A 0
			{
				if (isAngery == true) {SetStateLabel("See");}
			}
			BMEL A 0 A_BoxScaleXY(0.1, -0.1);
			BMEL AA 25 Fast;
			BMEL A 0 A_BoxScaleXY(-0.1, 0.1);
			Goto See;
		See:
			#### # 0 A_ResetScale();
			#### # 0
			{
				if (isAngery == true) {SetStateLabel("MadDash");}
			}
			BMEL A 10 Slow;
			Goto MadDash;
		MadDash:
			BMEL A 0 A_BoxScaleXY(0.05, -0.05);
			BMEL A 10 Slow A_FaceTarget;
			BMEL B 0 A_BoxScaleXY(-0.05, 0.05);
			#### # 0 A_StartSound("enemies/whiff2A", attenuation: ATTN_NONE);
			BMEL B 0 A_SpawnItemEX("BoxSlamWallBIG", 0, 0, 56, -4, 0, 0, 0, SXF_NOCHECKPOSITION);
			BMEL B 0 A_Recoil(-30);
			BMEL B 0 ThrustThingZ(0, 15, 0, 1);
			BMEL BBBBBBBBBB 1 {A_FaceTarget(); A_CustomMeleeAttack(2);}
			BMEL A 0 A_ResetScale();
			#### # 0 A_BoxExhaust(1);
			BMEL A 0 A_Chase;
			Goto See;
			Loop;
		Missile:
			BMEL # 0 A_Jump(256, "BigSlamATK", "GloveATK");
			Goto GloveATK;
		GloveATK:
			#### # 0 {if (isAngery == true) {SetStateLabel("EVILGloveATK");}}
			#### # 0 A_StartSound("enemies/whiffA", attenuation: ATTN_NONE);
			BMEL D 12 Slow A_FaceTarget;
			BMEL E 0 A_BoxScaleXY(0.05, -0.05);
			#### # 0 A_StartSound("enemies/peppowA");
			BMEL E 12 Slow BRIGHT A_SpawnProjectile("BossMelonBullet", 64, 0, 0, CMF_OFFSETPITCH, 0);
			#### # 0 A_StartSound("enemies/whiffA", attenuation: ATTN_NONE);
			BMEL F 12 Slow A_FaceTarget;
			BMEL G 0 A_BoxScaleXY(0.05, -0.05);
			#### # 0 A_StartSound("enemies/peppowA");
			BMEL G 12 Slow BRIGHT A_SpawnProjectile("BossMelonBullet", 64, 0, 0, CMF_OFFSETPITCH, 0);
			#### # 0 A_BoxExhaust(10);
			BMEL HH 6 Slow A_BoxScaleXY(-0.1, 0.1);
			Goto JustOneSec;
		EVILGloveATK:
			#### # 0 {bNOPAIN = true;}
			#### # 0 A_StartSound("enemies/whiffA", attenuation: ATTN_NONE);
			BMEL D 12 Slow A_FaceTarget;
			#### # 0 A_BoxScaleXY(0.05, -0.05);
			#### # 0 A_StartSound("enemies/peppowA");
			BMEL E 9 Slow BRIGHT A_SpawnProjectile("BossMelonBullet", 64, 0, 0, CMF_OFFSETPITCH, 0);
			BMEL D 3 Slow A_FaceTarget;
			#### # 0 A_BoxScaleXY(0.05, -0.05);
			#### # 0 A_StartSound("enemies/peppowA");
			BMEL E 9 Slow BRIGHT A_SpawnProjectile("BossMelonBullet", 64, 0, 0, CMF_OFFSETPITCH, 0);
			BMEL D 3 Slow A_FaceTarget;
			#### # 0 A_BoxScaleXY(0.05, -0.05);
			#### # 0 A_StartSound("enemies/peppowA");
			BMEL E 9 Slow BRIGHT A_SpawnProjectile("BossMelonBullet", 64, 0, 0, CMF_OFFSETPITCH, 0);
			#### # 0 A_StartSound("enemies/whiffA", attenuation: ATTN_NONE);
			BMEL FF 6 Slow A_BoxScaleXY(-0.05, 0.05);
			#### # 0 A_FaceTarget;
			#### # 0 A_BoxScaleXY(0.05, -0.05);
			#### # 0 A_StartSound("enemies/peppowA");
			BMEL G 9 Slow BRIGHT A_SpawnProjectile("BossMelonBullet", 64, 0, 0, CMF_OFFSETPITCH, 0);
			BMEL F 3 Slow A_FaceTarget;
			#### # 0 A_BoxScaleXY(0.05, -0.05);
			#### # 0 A_StartSound("enemies/peppowA");
			BMEL G 9 Slow BRIGHT A_SpawnProjectile("BossMelonBullet", 64, 0, 0, CMF_OFFSETPITCH, 0);
			BMEL F 3 Slow A_FaceTarget;
			#### # 0 A_BoxScaleXY(0.05, -0.05);
			#### # 0 A_StartSound("enemies/peppowA");
			BMEL G 9 Slow BRIGHT A_SpawnProjectile("BossMelonBullet", 64, 0, 0, CMF_OFFSETPITCH, 0);
			#### # 0 {bNOPAIN = false;}
			#### # 0 A_BoxExhaust(20);
			BMEL HHHH 3 Slow A_BoxScaleXY(-0.05, 0.05);
			Goto JustOneSec;
		BigSlamATK:
			#### # 0 {bNOPAIN = true;}
			BMEL AAAA 3 A_BoxScaleXY(0.05, -0.15);
			#### # 0 A_StartSound("enemies/pwooshA", attenuation: ATTN_NONE);
			BMEL I 0 A_ResetScale();
			BMEL I 0 {self.Vel.X = 0.0; self.Vel.Y = 0.0;}
			BMEL I 0 A_FaceTarget;
			BMEL I 0 ThrustThingZ(0, 52, 0, 1);
			BMEL I 0 A_BoxParticle("d7 d7 d7", 12, 40, 80, 8.0, 10.0, true);
			BMEL III 4 A_SpawnItemEX("BoxSlamBIG", 0, 0, 0, 0, 0, -4, 0, SXF_NOCHECKPOSITION);
			Goto BigSlamLoop;
		BigSlamLoop:
			BMEL I 1 
			{
				if (self.Vel.Z > 0) {A_BoxParticle2("d7 d7 d7", 1, 40, 80, 32.0, 4.0, -self.Vel.Z, true);}
				A_CustomMeleeAttack(6);
				if (self.Pos.Z ~== self.FloorZ) {return ResolveState('BigSlamDone');}
				else return ResolveState(null);
			}
			Loop;
		BigSlamDone:
			BMEL J 0 BRIGHT A_FaceTarget;
			BMEL J 0 BRIGHT
			{
				A_QuakeEX(2, 2, 2, 16, 1448, 1448);
				A_QuakeEX(2, 2, 2, 16, 1448, 1448);
				A_QuakeEX(2, 2, 2, 16, 1448, 1448);
				A_Explode(40, 256, XF_NOTMISSILE);
				A_SpawnItemEX("GIANTBOOM", -64, 0, random(12, 32), random(-2, 2), random(-2, 2), random(-2, 2), 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEX("HammerSlamPuff", -64, 0, random(12, 32), random(-2, 2), random(-2, 2), random(-2, 2), 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEX("HammerSlamPuff", -64, 0, random(12, 32), random(-2, 2), random(-2, 2), random(-2, 2), 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEX("GIANTBOOM", 64, 0, random(12, 32), random(-2, 2), random(-2, 2), random(-2, 2), 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEX("HammerSlamPuff", 64, 0, random(12, 32), random(-2, 2), random(-2, 2), random(-2, 2), 0, SXF_NOCHECKPOSITION);
				A_SpawnItemEX("HammerSlamPuff", 64, 0, random(12, 32), random(-2, 2), random(-2, 2), random(-2, 2), 0, SXF_NOCHECKPOSITION);
				A_BoxScaleXY(0.25, -0.25);
				A_BoxParticle("d7 d7 d7", 24, 40, 160, 8.0, 10.0, true);
			}
			BMEL JJ 10 Slow BRIGHT 
			{
				A_SpawnItemEX("BoxSlamSUPER", 0, 0, 0, 0, 0, 4, 0, SXF_NOCHECKPOSITION);
				A_BoxScaleXY(-0.075, 0.075);
			}
			#### # 0 A_BoxExhaust(25);
			#### # 0 {bNOPAIN = true;}
			#### # 0 {if ((isAngery == true) && (random(0, 1) == 1)) {SetStateLabel("BigSlamATK");}}
			#### # 0 A_ResetScale();
			Goto JustOneSec;
		Pain.Lightning:
			BMEL K 0 A_BoxShockedBig();
		Pain.Melee:
			#### # 0 {bNOPAIN = true;}
			BMEL K 0 A_ResetScale();
			BMEL K 0 ThrustThingZ(0, 3, 0, 1);
			BMEL K 0 A_Pain;
			BMEL K 1 A_BoxStars();
			BMEL K 0 
			{
				if (IsPrism) {A_BoxDropLoot("Pure", -4, IsPrism);}
				else A_BoxDropLoot("Pure", -2);
			}
			#### # 0 {IsPrism = false;}
			BMEL K 15 Slow A_FaceTarget;
			BMEL K 0 A_BoxExhaust(16);
			#### # 0 {bNOPAIN = false;}
			Goto See;
		Pain:
			#### # 0 {bNOPAIN = true;}
			BMEL K 0 A_ResetScale();
			BMEL K 8 A_Pain;
			BMEL K 0 A_BoxExhaust(8);
			#### # 0 {bNOPAIN = false;}
			Goto Missile;
		Exhausted:
			BMEL A 0 A_BoxDropLoot("Pure", -4, IsPrism);
			BMEL A 0 A_BoxDropAmmo(4);
			BMEL A 0 {bNOPAIN = true;}
			BMEL XX 8 A_BoxScaleXY(-0.015, 0.015);
			BMEL YY 8 A_BoxScaleXY(0.015, -0.015);
			BMEL XX 8 A_BoxScaleXY(-0.015, 0.015);
			BMEL YY 8 A_BoxScaleXY(0.015, -0.015);
			BMEL XX 8 A_BoxScaleXY(-0.015, 0.015);
			BMEL YY 8 A_BoxScaleXY(0.015, -0.015); //breathe in, breathe out
			BMEL A 0 {bNOPAIN = false;}
			BMEL A 0 A_BoxExhaust(0);
			Goto See;
		Death.Melee:
		Death:
			#### # 0 A_ResetScale();
			BMEL L 0 A_RemoveLight("Shocking");
			BMEL L 0 A_FaceTarget;
			BMEL L 0 A_BoxScream;
			#### # 0 A_SpawnItemEX("BigFruitGib1", random(-64, 64), random(-64, 64), random(32, 96), random(-16, 16), random(-16, 16), random(2, 8));
			BMEL LLLLLLLL 10 A_SpawnItemEX("SafeBoom", random(-64, 64), random(-64, 64), random(32, 96), random(-2, 2), random(-2, 2), random(-2, 2));
			BMEL M 0 A_SpawnItemEX("GIANTBOOM", random(-64, 64), random(-64, 64), random(32, 96), random(-2, 2), random(-2, 2), random(-2, 2));
			#### # 0 A_SpawnItemEX("BigFruitGib2", random(-64, 64), random(-64, 64), random(32, 96), random(-16, 16), random(-16, 16), random(2, 8));
			#### # 0 A_SpawnItemEX("BigFruitGib3", random(-64, 64), random(-64, 64), random(32, 96), random(-16, 16), random(-16, 16), random(2, 8));
			#### ######## 0 A_SpawnItemEx("BigFruitChunk", 0, 0, 0, random(-24, 24), random(-24, 24), random(0, 18), random(0, 359), SXF_NOCHECKPOSITION);
			#### ################ 0 A_SpawnItemEx("BigFruitGusher", 0, 0, 0, random(-24, 24), random(-24, 24), random(0, 18), random(0, 359), SXF_NOCHECKPOSITION);
			#### ############ 0 A_SpawnItemEX("BoomSmokeBig", random(-64, 64), random(-64, 64), random(32, 96), frandom(-2, 2), frandom(-2, 2), frandom(-2, 2), 0, SXF_NOCHECKPOSITION);
			#### # 0 A_BoxDropLoot("Pure", -2);
			#### # 0 A_QuakeEX(3, 3, 3, 35, 0, 1280, 0);
			BMEL # 30 A_BoxScaleXY(0.1, -0.1);
			BMEL # 30 A_BoxScaleXY(0.05, -0.05);
			BMEL # 30 A_BoxScaleXY(0.05, -0.05);
			BMEL N 0 A_SpawnItemEX("GIANTBOOM", random(-64, 64), random(-64, 64), random(32, 96), random(-2, 2), random(-2, 2), random(-2, 2));
			#### # 0 A_SpawnItemEX("BigFruitGib3", random(-64, 64), random(-64, 64), random(32, 96), random(-16, 16), random(-16, 16), random(2, 8));
			#### # 0 A_SpawnItemEX("BigFruitGib4", random(-64, 64), random(-64, 64), random(32, 96), random(-16, 16), random(-16, 16), random(2, 8));
			#### ############ 0 A_SpawnItemEx("BigFruitChunk", 0, 0, 0, random(-24, 24), random(-24, 24), random(0, 18), random(0, 359), SXF_NOCHECKPOSITION);
			#### ######################## 0 A_SpawnItemEx("BigFruitGusher", 0, 0, 0, random(-24, 24), random(-24, 24), random(0, 18), random(0, 359), SXF_NOCHECKPOSITION);
			#### ############ 0 A_SpawnItemEX("BoomSmokeBig", random(-64, 64), random(-64, 64), random(32, 96), frandom(-2, 2), frandom(-2, 2), frandom(-2, 2), 0, SXF_NOCHECKPOSITION);
			#### # 0 A_BoxDropLoot("Pure", -2);
			#### # 0 A_QuakeEX(3, 3, 3, 35, 0, 1280, 0);
			BMEL # 30 A_BoxScaleXY(0.1, -0.1);
			BMEL # 30 A_BoxScaleXY(0.05, -0.05);
			BMEL # 30 A_BoxScaleXY(0.05, -0.05);
			#### O 0 A_NoBlocking;
			TNT1 A 0 A_SpawnItemEX("GIANTBOOM", random(-64, 64), random(-64, 64), random(32, 96), random(-2, 2), random(-2, 2), random(-2, 2));
			#### # 0 A_SpawnItemEX("BigFruitGib5", random(-64, 64), random(-64, 64), random(32, 96), random(-16, 16), random(-16, 16), random(2, 8));
			#### # 0 A_SpawnItemEX("BigFruitGib6", random(-64, 64), random(-64, 64), random(32, 96), random(-16, 16), random(-16, 16), random(2, 8));
			#### # 0 A_SpawnItemEX("BigFruitGib7", random(-64, 64), random(-64, 64), random(32, 96), random(-16, 16), random(-16, 16), random(2, 8));
			#### # 0 A_SpawnItemEX("BigFruitGib7", random(-64, 64), random(-64, 64), random(32, 96), random(-16, 16), random(-16, 16), random(2, 8));
			#### ################ 0 A_SpawnItemEx("BigFruitChunk", 0, 0, 0, random(-24, 24), random(-24, 24), random(0, 18), random(0, 359), SXF_NOCHECKPOSITION);
			#### ################################ 0 A_SpawnItemEx("BigFruitGusher", 0, 0, 0, random(-24, 24), random(-24, 24), random(0, 18), random(0, 359), SXF_NOCHECKPOSITION);
			#### ############ 0 A_SpawnItemEX("BoomSmokeBig", random(-64, 64), random(-64, 64), random(32, 96), frandom(-2, 2), frandom(-2, 2), frandom(-2, 2), 0, SXF_NOCHECKPOSITION);
			#### # 0 A_BoxDropLoot("Pure", -4);
			#### # 0 A_QuakeEX(3, 3, 3, 35, 0, 1280, 0);
			#### # 30 A_BoxScaleXY(0.1, -0.1);
			#### # 30 A_BoxScaleXY(0.05, -0.05);
			#### # 30 A_BoxScaleXY(0.05, -0.05);
			#### # 0 A_BoxScaleXY(0.2, -0.2);
			#### O -1;
			Stop;
		//Prism Effect Start
		Pain.Prism:
			"####" "#" 0 {IsPrism = true;}
			Goto Pain.Melee;
		Death.Prism:
			"####" "#" 0 {IsPrism = true;}
			Goto Death.Melee;
		//Prism Effect End
	}
}

CLASS BossMelonBullet : OnionBullet
{
	Default
	{
		Radius 15;
		Height 24;
		DamageFunction (25);
		Speed 32;
		+BRIGHT;
		+BLOODSPLATTER;
	}

	States
	{
		Spawn:
			TNT1 A 0 NoDelay A_AttachLightDef("bigbullet", "GLOWREDBIG");
			BMEL Z 0 A_Jump(256, "SpeenLeft", "SpeenRight");
			Goto SpeenLeft;
		SpeenLeft:
			#### ## 1 A_SetRoll(roll - 8);
			#### # 0 A_SpawnItemEX("FireTrail", 0, 0, 0, 0, 0, 0);
			//#### # 0 A_BoxParticle2("ff eb 00", 1, 16, 70, POffset: 4.0, POffsetZ: 4.0, PSpeed: -1.0, PBright: true);
			Loop;
		SpeenRight:
			#### ## 1 A_SetRoll(roll + 8);
			#### # 0 A_SpawnItemEX("FireTrail", 0, 0, 0, 0, 0, 0);
			//#### # 0 A_BoxParticle2("ff eb 00", 1, 16, 70, POffset: 4.0, POffsetZ: 4.0, PSpeed: -1.0, PBright: true);
			Loop;
		Death.Sky:
		Death:
			TNT1 A 1 A_SpawnItemEx("DangerBoomMelon", 0, 0, 0, 0, 0, 0);
			Stop;
	}
}

CLASS DangerBoomMelon : DangerBoom
{
	Default {DamageType "Melon";}
}

CLASS FireTrail : BoxActor
{
	Default
	{
		Radius 2;
		Height 4;
		Scale 1.25;
		+NOINTERACTION;
		+BRIGHT;
	}
	
	States
	{
		Spawn:
			TNT1 A 2;
			PEPR P 0 A_Jump(128, 2);
			PEPR Q 0;
			#### # 0;
			Goto Looper;
		Looper:
			PEPR # 1
			{
				A_BoxScaleXY(1.05, 1.1, true);
				A_FadeOut(0.2);
				if (random(1, 2) == 2) {A_BoxParticle("ff eb 00", 1, 16, 70, PSpeed: 4.0, PBright: true);}
			}
			Loop;
	}
}

CLASS BigFruitBlood : BoxBlood
{
	States
	{
		Firsty:
			TNT1 AAA 0 A_SpawnItemEX("FruitGusher", 0, 0, 0, random(-4, 4), random(-4, 4), random(-4, 4), 0, SXF_ORIGINATOR | SXF_NOCHECKPOSITION);
			TNT1 AAA 0 A_SpawnItemEx("BigFruitChunk", 0, 0, 0, random(-6, 6), random(-6, 6), random(0, 6), random(0, 359), SXF_NOCHECKPOSITION, 100);
			TNT1 AAA 0 A_SpawnItemEx("FruitGusherPuff", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
			TNT1 A 0 A_BoxParticle("ff 00 00", 3, 12, 30);
			Goto Super::Firsty;
		Secondy:
			TNT1 AA 0 A_SpawnItemEX("FruitGusher", 0, 0, 0, random(-4, 4), random(-4, 4), random(-4, 4), 0, SXF_ORIGINATOR | SXF_NOCHECKPOSITION);
			TNT1 AA 0 A_SpawnItemEx("BigFruitChunk", 0, 0, 0, random(-6, 6), random(-6, 6), random(0, 6), random(0, 359), SXF_NOCHECKPOSITION, 100);
			TNT1 AA 0 A_SpawnItemEx("FruitGusherPuff", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
			TNT1 A 0 A_BoxParticle("ff 00 00", 2, 12, 30);
			Goto Super::Secondy;
		Thirdy:
			TNT1 A 0 A_SpawnItemEX("FruitGusher", 0, 0, 0, random(-4, 4), random(-4, 4), random(-4, 4), 0, SXF_ORIGINATOR | SXF_NOCHECKPOSITION);
			TNT1 A 0 A_SpawnItemEx("BigFruitChunk", 0, 0, 0, random(-6, 6), random(-6, 6), random(0, 6), random(0, 359), SXF_NOCHECKPOSITION, 100);
			TNT1 A 0 A_SpawnItemEx("FruitGusherPuff", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
			TNT1 A 0 A_BoxParticle("ff 00 00", 1, 12, 30);
			Goto Super::Thirdy;
	}
}

Class BigFruitGusher : FruitGusher
{
	Default
	{
		Scale 2.0;
	}
}

CLASS BigFruitGib : BoxGib abstract
{
	States
	{
		SpeenRight:
			"####" "#" 1 A_SetRoll(roll - 3);
			"####" "#" 0 A_BoxFade(0.005);
			"####" "#" 0 A_SpawnItemEX("BigFruitGusher", random(0, 2), random(0, 2), random(0, 2), random(0, 1), random(0, 1), random(0, 1), 0, SXF_ORIGINATOR, 220);
			Loop;
		SpeenLeft:
			"####" "#" 1 A_SetRoll(roll - 3);
			"####" "#" 0 A_BoxFade(0.005);
			"####" "#" 0 A_SpawnItemEX("BigFruitGusher", random(0, 2), random(0, 2), random(0, 2), random(0, 1), random(0, 1), random(0, 1), 0, SXF_ORIGINATOR, 220);
			Loop;
	}
}

CLASS BigFruitChunk : BoxChunk
{
	States
	{	
		Spawn:
			TNT1 A 0 NoDelay A_SetRoll(random(0, 359));
			"####" "#" 0 A_QueueCorpse;
			BMEL W 0 A_Jump(128, 2);
			BMEL W 0 {bSPRITEFLIP = true;}
			BMEL W 0 A_Jump(220, 2);
			BMEL V 0 {bSPRITEFLIP = true;}
			"####" "#" 1 A_Jump(128, "SpeenLeft");
			Goto SpeenRight;
	}
}

CLASS BigFruitGib1 : BigFruitGib
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay A_SetRoll(random(0, 359));
			"####" "#" 0 A_QueueCorpse;
			BMEL O 1 A_Jump(128, "SpeenLeft");
			Goto SpeenRight;
	}
}

CLASS BigFruitGib2 : BigFruitGib
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay A_SetRoll(random(0, 359));
			"####" "#" 0 A_QueueCorpse;
			BMEL P 1 A_Jump(128, "SpeenLeft");
			Goto SpeenRight;
	}
}

CLASS BigFruitGib3 : BigFruitGib
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay A_SetRoll(random(0, 359));
			"####" "#" 0 A_QueueCorpse;
			BMEL Q 1 A_Jump(128, "SpeenLeft");
			Goto SpeenRight;
	}
}

CLASS BigFruitGib4 : BigFruitGib
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay A_SetRoll(random(0, 359));
			"####" "#" 0 A_QueueCorpse;
			BMEL R 1 A_Jump(128, "SpeenLeft");
			Goto SpeenRight;
	}
}

CLASS BigFruitGib5 : BigFruitGib
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay A_SetRoll(random(0, 359));
			"####" "#" 0 A_QueueCorpse;
			BMEL S 1 A_Jump(128, "SpeenLeft");
			Goto SpeenRight;
	}
}

CLASS BigFruitGib6 : BigFruitGib
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay A_SetRoll(random(0, 359));
			"####" "#" 0 A_QueueCorpse;
			BMEL T 1 A_Jump(128, "SpeenLeft");
			Goto SpeenRight;
	}
}

CLASS BigFruitGib7 : BigFruitGib
{
	States
	{
		Spawn:
			TNT1 A 0 NoDelay A_SetRoll(random(0, 359));
			"####" "#" 0 A_QueueCorpse;
			BMEL U 1 A_Jump(128, "SpeenLeft");
			Goto SpeenRight;
	}
}